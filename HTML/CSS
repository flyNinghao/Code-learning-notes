CSS:层叠样式表

嵌套规则：
  -块级元素能嵌套其他元素，内联元素只能嵌套其他内联元素
  -有几个特殊的块级元素，只能嵌套内联元素：<h1-7>,<p>,<dt>
  -块级与块级元素并列，内联元素与内联元素并列


1,css四种引入方式
  -行内样式（内联样式）：<div style="">,键值对的方式添加，分号分开
  -嵌入式（内部样式）：<head>里面加<style>
  -链接式：写入css文件，通过文件地址引入<link href="地址" rel="stylesheet">html语言规范，数量不限，先加载css，再加载html
  -导入式：<style>@import "文件地址"</style>css语言规范，数量有限，先加载html，再加载css

2，四种基本选择器
  -*：通用选择器
  -标签名选择器
  -id选择器：#id
  -类选择器：.类名

3，组合选择器
  -,:逗号分开，表示选择器并列
  -空格：后代选择器（所有后代中找）嵌套样式内层所有
  ->:大于号，子代选择器（在儿子中寻找）嵌套样式内层第一层
  -+:加号，毗邻选择器~E+F，选择所有紧随E元素之后的同级元素F（只向下找）
  
4，属性选择器
  -[attr]:匹配所有具有attr属性的元素，不考虑值
  -[attr=value]:匹配所有attr属性等于value的元素
  -[attr~=value]:模糊匹配，匹配attr属性具有多个空格分隔的值，其中一个值是value的元素
  -[attr^=value]:匹配属性值以value结尾的每个元素
  -[attr$=value]:匹配属性值以value结尾的每个元素
  -[attr*=value]:匹配属性值中包含指定值的某个元素
  
5，伪类:给选择器添加一些特殊的效果
  -anchor伪类：控制链接的显示效果
    -:link：一般
    -:hover：悬浮（这个也可以用作其他元素的悬浮操作）
    -:visited：访问后
    -:active：点击后
  -before，after伪类
    -:before:  p:before：在每个<p>元素前插入内容
    -:after   p:after：在每个<p>元素之后插入内容
    
6，优先级和继承
  -内联样式优先级最高，权重为 ----1000
  -id属性样式权重为 -----100
  -class属性样式权重为 -----10
  -html标签名权重为 ------1
  按照这些规则将数字诸位相加，得到最终权重，大的优先

  -文内样式优先级高于外部定义、引用
  -有!important声明的优先级高于一切
  -如果!important声明冲突，则比较优先级
  -如果优先权一样，按照在源码中出现的顺序决定，后来者居上
  -由继承而得到的样式没有权重计算，低于一切其他规则，如*
  
7，css常用属性
  -颜色属性
    -名字
    -颜色码
    -rgb（三位数）
    -rgba（三位数，透明度）
  -字体属性
    -font-size:大小
    -font-family:字体
    -font-weight:粗细
  -背景属性
    -background-color:背景色
    -background-image:背景图
    -background-repeat:是否平铺
    -background-position:right top
  -文本属性
    -text-align:水平排列
    -text-height:文本行高
    -vertical-align:元素内容的垂直对齐方式，只对行内元素有效，对块级元素无效
    -text-indent:首行缩进
    -letter-spacing:字符间距
    -wordspacing:词语间距
    -text-transform:首字母大写
  -边框属性
    -border-style:样式
    -border-color:颜色
    -border-width:宽度
    -可以单独控制某一条边框的样式
  -列表属性
    list-style:列表前面的标识样式
  -display属性
    -none
    -block：设置成块级标签
    -inline：设置成内联标签
    -inline-block：既有块级元素属性（可以设置长宽），又有内联元素的属性（可以同一行）

8，CSS内外边距
  -margin：控制元素与元素之间的距离
  -padding：控制内容与边框的距离
  -border：边框
  -content（内容）盒子的内容
  -完整的元素大小，还需要加上边框、内边距和元素长宽
  -margin:10px 5px 15px 20px;-----------上 右 下 左
  -margin:10px 5px 15px;----------------上 右左 下
  -margin:10px 5px;---------------------上下  右左
  -margin:10px;    ---------------------上右下左

  -边界塌陷（边界重叠）
    -兄弟div：上面div的margin-bottom和下面div的margin-top会塌陷，也就是会取上下两者margin里最大值作为显示值
    -if父级div中没有border，padding，inline content，子级div的margin会一直向上找，直到找到某个标签包括border，padding，inline content中的其中一个，然后按此div进行margin ；
9，float属性
  -文档流：指的是元素排版布局过程中，元素会自动从左往右，从上往下的流式排列。
  -脱离文档流：也就是将元素从普通的布局排版中拿走，其他盒子在定位的时候，会当做脱离文档流的元素不存在而进行定位。
  -浮动float被设计就是用来完成文本环绕的效果，所以文本不会被挡住，即float是一种不彻底的脱离文档流的方式
  -浮动现象
    -浮动的框之后的block元素会认为这个框不存在，但其中的文本依然会为这个元素让出位置，浮动的框之后的inline元素，会为这个框空出位置，然后按顺序排列
    -左右结构的div盒子，如果一个使用浮动，一个未使用浮动，会造成div覆盖现象
    -上下结构的div盒子，如果子元素采用float，导致父元素没有内容（父元素没有被撑开会被认为没有高度），就会早上上下元素覆盖现象
    -可以通过清除浮动解决覆盖现象
  -清除浮动
    -在非IE浏览器（如Firefox）下，当容器的高度为auto，且容器的内容中有浮动（float为left或right）的元素，在这种情况下，容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。
    -clear语法：
      -clear : none | left | right | both

      -取值：
        -none : 默认值。允许两边都可以有浮动对象
        -left : 不允许左边有浮动对象
        -right : 不允许右边有浮动对象
        -both : 不允许有浮动对象

      但是需要注意的是：clear属性只会对自身起作用，而不会影响其他元素。如果一个元素的右侧有一浮动对象，而这个元素设置了不允许右边有浮动对象，即clear：right，则这个元素会自动下移一格，达到本元素右边没有浮动对象的目的。
    -推荐方法
      .clearfix:after {             <----在类名为“clearfix”的元素内最后面加入内容； 
        content: ".";                 <----内容为“.”就是一个英文的句号而已。也可以不写。 
        display: block;               <----加入的这个元素转换为块级元素。 
        clear: both;                  <----清除左右两边浮动。 
        visibility: hidden;           <----可见度设为隐藏。注意它和display:none;是有区别的。visibility:hidden;仍然占据空间，只是看不到而已； 
        line-height: 0;               <----行高为0； 
        height: 0;                    <----高度为0； 
        font-size:0;                  <----字体大小为0； 
      } 
      整段代码就相当于在浮动元素后面跟了个宽高为0的空div，然后设定它clear:both来达到清除浮动的效果。
    -overflow：hidden方法
      -该方法的含义是超出部分要裁切隐藏。可以把普通元素+浮动元素想成是立方体，如果包含容器没有高度，就计算浮动元素的高度，容器会被撑开，达到清除浮动的目的
      -该方法不推荐使用

10，position定位
  -static:默认方式，无定位，不能当做绝对定位的参照物
  -relative:相对定位，相对于该元素在文档流中的原始位置进行定位。但即使设定元素的相对定位偏移后，元素还占有着原来的位置。未脱离文档流，但可以定义偏移位置。层叠通过z-index属性定义
  -absolute:绝对定位，设置为绝对定位的元素框从文档流完全删除，并相对于最近的已定位祖先元素定位，如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块（即body元素）
  -重点：如果父级设置了position属性，例如position:relative;，那么子元素就会以父级的左上角为原始点进行定位。这样能很好的解决自适应网站的标签偏离问题，即父级为自适应的，那我子元
   素就设置position:absolute;父元素设置position:relative;，然后Top、Right、Bottom、Left用百分比宽度表示。
  -fixed:对象脱离正常文档流，使用top，right，bottom，left等属性以窗口为参考点进行定位，当出现滚动条时，对象不会随着滚动。而其层叠通过z-index属性 定义。 注意点： 一个元素若设置
   了 position:absolute | fixed; 则该元素就不能设置float。这 是一个常识性的知识点，因为这是两个不同的流，一个是浮动流，另一个是“定位流”。但是 relative 却可以。因为它原本所占的
   空间仍然占据文档流。
  -设置绝对定位之后，用margin进行定位，因为元素已经脱离文档流，所以它就是按照其原来的位置定位。
  
        
